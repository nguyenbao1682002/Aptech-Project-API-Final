@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<ObjectBussiness.Question>

@{
    ViewData["Title"] = "Question";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<style>
    .page-item .page-link {
        color: white;
    }

    .page-item:last-child .page-link {
        color: black;
    }

    .page-item:first-child .page-link {
        color: black;
    }
</style>
<div class="container-fluid py-4">
    <p>
        <a style="color:black;background-color:yellow" class="btn" href="~/Admin/QuestionAdmin/Create">Create New</a>
    </p>
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>Authors table</h6>
                </div>
                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.QuestionID)
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">
                                        @Html.DisplayNameFor(model => model.RoundID)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.QuestionName)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.AnswerA)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.AnswerB)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.AnswerC)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.AnswerD)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.CorrectAnswer)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.Note)
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        @Html.DisplayNameFor(model => model.DateMake)
                                    </th>
                                    <th class="text-secondary opacity-7">Control</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.QuestionID)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.RoundName)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.QuestionName)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.AnswerA)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.AnswerB)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.AnswerC)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.AnswerD)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.CorrectAnswer)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Html.DisplayFor(modelItem => item.Note)</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@Convert.ToDateTime(item.DateMake).ToString("dd/MM/yyyy")</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <div>
                                                        <a class="btn btn-success" href="~/Admin/QuestionAdmin/Edit/@item.QuestionID">Update</a>
                                                        @* <a class="btn btn-danger" class="btn" href="~/Admin/QuestionAdmin/Delete/@item.QuestionID">Delete</a> *@
                                                        <a href="#" class="delete-link btn btn-danger" data-id="@item.QuestionID" data-confirm="Do you really want to delete?" data-toggle="modal" data-target="#confirmModal">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                @if (TempData["msgSearchNull"] != null)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@TempData["msgSearchNull"]</h6>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, SearchString = @Context.Request.Query["SearchString"] }),
            new X.PagedList.Web.Common.PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
</div>
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirm deletion (Press outside to cancel)</h5>
                @*  <button type="button" style="background-color:transparent;border:none" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button> *@
            </div>
            <div class="modal-body">
                <p id="confirmMessage"></p>
            </div>
            <div class="modal-footer">
                @* <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button> *@
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>
<!--   Core JS Files   -->
<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
@section Scripts {
    @{
        DateTime date = DateTime.Now;
    }
    <script src="~/Admin/Scripts/jquery-ui.js"></script>
    <script src="~/Admin/js/Controller/QuestionController.js?@date"></script>
}